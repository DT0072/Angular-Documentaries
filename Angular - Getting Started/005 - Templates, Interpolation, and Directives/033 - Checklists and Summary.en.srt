0
00:00:02,279 --> 00:00:04,509
Checklists are a great way to recheck our

1
00:00:04,509 --> 00:00:07,540
understanding and our work. Let's start

2
00:00:07,540 --> 00:00:10,169
with a template. Use an inline template

3
00:00:10,169 --> 00:00:12,519
when building shorter templates, then

4
00:00:12,519 --> 00:00:14,550
specify the template property in the

5
00:00:14,550 --> 00:00:17,710
Component decorator. Use double or single

6
00:00:17,710 --> 00:00:20,500
quotes to define the template string, or

7
00:00:20,500 --> 00:00:23,344
use the ES2015 back ticks to lay out the

8
00:00:23,344 --> 00:00:27,050
HTML on multiple lines. When using inline

9
00:00:27,050 --> 00:00:29,329
templates, there is often no design‑time

10
00:00:29,329 --> 00:00:32,380
syntax checking, so pay close attention to

11
00:00:32,380 --> 00:00:35,609
the syntax. Use linked templates for

12
00:00:35,609 --> 00:00:38,915
longer templates. Specify the template URL

13
00:00:38,915 --> 00:00:41,280
property in the Component decorator, and

14
00:00:41,280 --> 00:00:43,590
define the path to the external template

15
00:00:43,590 --> 00:00:47,097
file. This one is a more visual checklist.

16
00:00:47,097 --> 00:00:49,750
After building the template, we build its

17
00:00:49,750 --> 00:00:51,840
component and learn how to use that

18
00:00:51,840 --> 00:00:54,509
component as a directive. Remember our

19
00:00:54,509 --> 00:00:57,259
steps? First, we use the directive as an

20
00:00:57,259 --> 00:00:59,380
element in the template for any other

21
00:00:59,380 --> 00:01:02,200
component. We use the directive component

22
00:01:02,200 --> 00:01:05,299
selector as the directive name. We then

23
00:01:05,299 --> 00:01:07,250
declare the component so it is available

24
00:01:07,250 --> 00:01:09,180
to any template associated with this

25
00:01:09,180 --> 00:01:11,859
Angular module. We add the component to

26
00:01:11,859 --> 00:01:14,000
the declarations array passed into the

27
00:01:14,000 --> 00:01:18,040
NgModule decorator of the Angular module.

28
00:01:18,040 --> 00:01:20,219
Angular's data binding was introduced in

29
00:01:20,219 --> 00:01:23,170
this module with a look at interpolation.

30
00:01:23,170 --> 00:01:25,930
Interpolation is one‑way binding from a

31
00:01:25,930 --> 00:01:28,140
component class property to an element

32
00:01:28,140 --> 00:01:30,980
property. Interpolation is defined with

33
00:01:30,980 --> 00:01:33,384
curly braces and a template expression.

34
00:01:33,384 --> 00:01:36,239
That expression can be a simple property,

35
00:01:36,239 --> 00:01:38,750
a concatenation, a calculation, or a

36
00:01:38,750 --> 00:01:41,409
method call. Note that no quotes are

37
00:01:41,409 --> 00:01:45,280
needed when using interpolation. And we

38
00:01:45,280 --> 00:01:48,129
saw how to use two of Angular's structural

39
00:01:48,129 --> 00:01:52,890
directives, ngIf and ngFor. When using

40
00:01:52,890 --> 00:01:54,810
these structural directives, be sure to

41
00:01:54,810 --> 00:01:57,500
prefix them with an asterisk and assign

42
00:01:57,500 --> 00:02:00,430
them to a quoted string expression. Use

43
00:02:00,430 --> 00:02:03,069
ngIf to add or remove an element and its

44
00:02:03,069 --> 00:02:04,879
children from the DOM based on an

45
00:02:04,879 --> 00:02:07,840
expression. If the assigned expression is

46
00:02:07,840 --> 00:02:10,439
evaluated to be a true value, the element

47
00:02:10,439 --> 00:02:13,280
is added to the DOM. If false, the element

48
00:02:13,280 --> 00:02:16,500
is removed from the DOM. Use ngFor to

49
00:02:16,500 --> 00:02:18,730
repeat an element and its children in the

50
00:02:18,730 --> 00:02:21,295
DOM for each element in an iterable list.

51
00:02:21,295 --> 00:02:25,669
Define the local variable with let and use

52
00:02:25,669 --> 00:02:28,460
of, not in when defining the ngFor

53
00:02:28,460 --> 00:02:33,060
expression. In this module, we evaluated

54
00:02:33,060 --> 00:02:35,569
the differences between an inline template

55
00:02:35,569 --> 00:02:38,090
and a linked template, and we created a

56
00:02:38,090 --> 00:02:40,889
linked template. We then built a component

57
00:02:40,889 --> 00:02:42,629
for that template and learned how to use

58
00:02:42,629 --> 00:02:45,449
that component as a directive. We took a

59
00:02:45,449 --> 00:02:48,610
first look at Angular data binding through

60
00:02:48,610 --> 00:02:50,210
interpolation and powered up our template

61
00:02:50,210 --> 00:02:54,120
by using built‑in Angular directives.

62
00:02:54,120 --> 00:02:55,909
Here, once again, is our application

63
00:02:55,909 --> 00:02:58,889
architecture. In this module, we started

64
00:02:58,889 --> 00:03:02,719
the product list component. Next up, let's

65
00:03:02,719 --> 00:03:04,919
discover more of Angular's data binding

66
00:03:04,919 --> 00:03:11,000
features and add interactivity to the product list template.

