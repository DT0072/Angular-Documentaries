0
00:00:01,510 --> 00:00:04,059
Now that we have npm installed, we could

1
00:00:04,059 --> 00:00:06,650
use it to install everything else we need.

2
00:00:06,650 --> 00:00:09,980
So what else do we need? Well, we need the

3
00:00:09,980 --> 00:00:11,849
Angular libraries that comprise the

4
00:00:11,849 --> 00:00:14,400
Angular framework. We'll want the Angular

5
00:00:14,400 --> 00:00:17,050
CLI, which is the command line interface

6
00:00:17,050 --> 00:00:19,429
for Angular. We can use the CLI to

7
00:00:19,429 --> 00:00:22,359
generate code, execute our application,

8
00:00:22,359 --> 00:00:24,820
deploy it to production, and much more as

9
00:00:24,820 --> 00:00:27,429
we'll see throughout this course. We need

10
00:00:27,429 --> 00:00:29,339
TypeScript, which is the language we use

11
00:00:29,339 --> 00:00:31,730
with Angular, and we'll want testing

12
00:00:31,730 --> 00:00:33,719
tools, linters, and other supporting

13
00:00:33,719 --> 00:00:37,030
libraries. So, do we need to manually

14
00:00:37,030 --> 00:00:40,219
install each of these with npm? Luckily,

15
00:00:40,219 --> 00:00:42,640
the answer to that question is no, at

16
00:00:42,640 --> 00:00:45,770
least not directly. A more common practice

17
00:00:45,770 --> 00:00:49,060
is to define a package.json file that

18
00:00:49,060 --> 00:00:51,530
lists each package we need for our Angular

19
00:00:51,530 --> 00:00:54,350
application. And as you can see, there are

20
00:00:54,350 --> 00:00:57,090
many of them. We can also specify the

21
00:00:57,090 --> 00:01:00,079
desired version of each package. We then

22
00:01:00,079 --> 00:01:03,380
tell npm to use the package.json file to

23
00:01:03,380 --> 00:01:05,879
install all of the defined packages along

24
00:01:05,879 --> 00:01:08,340
with their dependencies. In the

25
00:01:08,340 --> 00:01:11,340
package.json file, the list of packages is

26
00:01:11,340 --> 00:01:14,200
divided into two parts. The dependencies

27
00:01:14,200 --> 00:01:15,959
list is for the packages we need for

28
00:01:15,959 --> 00:01:19,319
development that must also be deployed.

29
00:01:19,319 --> 00:01:21,140
The devDependencies list is for the

30
00:01:21,140 --> 00:01:24,480
packages we only need for development. The

31
00:01:24,480 --> 00:01:26,629
dependencies list includes the primary

32
00:01:26,629 --> 00:01:28,980
Angular packages, along with supporting

33
00:01:28,980 --> 00:01:31,950
packages, such a RxJS for working with

34
00:01:31,950 --> 00:01:35,120
data. The devDependencies include the

35
00:01:35,120 --> 00:01:37,790
Angular CLI. Here is a linter which

36
00:01:37,790 --> 00:01:40,500
evaluates our code for best practices.

37
00:01:40,500 --> 00:01:42,019
TypeScript is here in the devDependencies

38
00:01:42,019 --> 00:01:45,400
since we transpile the code to JavaScript

39
00:01:45,400 --> 00:01:48,120
before deployment. And many of these are

40
00:01:48,120 --> 00:01:51,620
for unit and end‑to‑end code tests. By

41
00:01:51,620 --> 00:01:53,879
defining a package.json file for our

42
00:01:53,879 --> 00:01:56,549
Angular application, we ensure everyone on

43
00:01:56,549 --> 00:01:59,170
the team installs the appropriate packages

44
00:01:59,170 --> 00:02:02,459
and versions. We'll see how to install all

45
00:02:02,459 --> 00:02:45,000
of the packages in the package.json file as we set up our Angular application next.

