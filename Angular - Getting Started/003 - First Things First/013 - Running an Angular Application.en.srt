0
00:00:01,439 --> 00:00:03,419
I've included enough additional code with

1
00:00:03,419 --> 00:00:05,269
the starter files to run the sample

2
00:00:05,269 --> 00:00:08,310
application, so let's give it a try.

3
00:00:08,310 --> 00:00:10,089
Remember the scripts area in our

4
00:00:10,089 --> 00:00:12,820
package.json file? Here is the start

5
00:00:12,820 --> 00:00:15,980
script. When we type npm start, it will

6
00:00:15,980 --> 00:00:19,260
execute the command defined here. The ng

7
00:00:19,260 --> 00:00:22,309
executes the Angular CLI. The string after

8
00:00:22,309 --> 00:00:25,500
the ng is the CLI command. The serve

9
00:00:25,500 --> 00:00:27,940
command builds the application and starts

10
00:00:27,940 --> 00:00:30,820
a local web server that allows us to serve

11
00:00:30,820 --> 00:00:33,939
up the application without deploying it.

12
00:00:33,939 --> 00:00:36,619
The â€‘o is a command option that opens the

13
00:00:36,619 --> 00:00:40,460
URL in our default browser. The CLI has

14
00:00:40,460 --> 00:00:42,799
many more commands and options. We'll see

15
00:00:42,799 --> 00:00:44,609
more of them as we progress through this

16
00:00:44,609 --> 00:00:48,009
course. Are we ready to make a go? Let's

17
00:00:48,009 --> 00:00:50,369
try out this start script. Back at the

18
00:00:50,369 --> 00:00:53,020
command prompt or terminal, type npm

19
00:00:53,020 --> 00:00:56,609
start. This executes the start script. If

20
00:00:56,609 --> 00:00:58,460
this is the first time using the Angular

21
00:00:58,460 --> 00:01:00,740
CLI, you will be asked if you'd like to

22
00:01:00,740 --> 00:01:02,789
share anonymous usage data with the

23
00:01:02,789 --> 00:01:05,099
Angular team. This can help the team

24
00:01:05,099 --> 00:01:08,040
better understand your usage scenarios.

25
00:01:08,040 --> 00:01:10,560
I'll answer with y, but select whichever

26
00:01:10,560 --> 00:01:15,090
option you prefer. The CLI then builds the

27
00:01:15,090 --> 00:01:18,590
application, starts a web server, and

28
00:01:18,590 --> 00:01:21,310
opens the URL in the default browser,

29
00:01:21,310 --> 00:01:24,170
which in my case is Chrome. If all is

30
00:01:24,170 --> 00:01:25,829
well, the application appears in the

31
00:01:25,829 --> 00:01:28,579
browser and displays some text, as shown

32
00:01:28,579 --> 00:01:31,829
here. If the text does not appear or you

33
00:01:31,829 --> 00:01:34,519
see errors in the console, ensure that you

34
00:01:34,519 --> 00:01:37,829
ran npm install successfully, as defined

35
00:01:37,829 --> 00:01:40,780
in the prior clip. As you can see, our

36
00:01:40,780 --> 00:01:42,909
application doesn't look like much, but

37
00:01:42,909 --> 00:01:44,799
we'll fix that on our journey through

38
00:01:44,799 --> 00:01:47,700
Angular. I've moved the windows around so

39
00:01:47,700 --> 00:01:49,900
that we could see the editor, the browser,

40
00:01:49,900 --> 00:01:52,209
and the terminal window. Let's see what

41
00:01:52,209 --> 00:01:54,859
happens when we make a code change. In the

42
00:01:54,859 --> 00:01:59,299
editor, open the app.component.html file.

43
00:01:59,299 --> 00:02:01,310
Don't worry too much about the syntax here

44
00:02:01,310 --> 00:02:04,239
yet. We'll talk about it shortly. For now,

45
00:02:04,239 --> 00:02:06,890
we'll just change the welcome text. We

46
00:02:06,890 --> 00:02:08,810
immediately see here that our code has

47
00:02:08,810 --> 00:02:12,259
recompiled, the browser refreshes, and or

48
00:02:12,259 --> 00:02:15,050
updated text appears. So any time we make

49
00:02:15,050 --> 00:02:17,349
a change to our application, we'll be able

50
00:02:17,349 --> 00:02:19,280
to immediately see the effect of that

51
00:02:19,280 --> 00:02:22,129
change. That will be helpful. When we are

52
00:02:22,129 --> 00:02:24,280
finished working with our files, we can

53
00:02:24,280 --> 00:02:27,009
close the browser, but the server keeps

54
00:02:27,009 --> 00:02:29,599
running. To stop it, go back to the

55
00:02:29,599 --> 00:02:31,509
command prompt or terminal and press

56
00:02:31,509 --> 00:02:35,889
Ctrl+C or Command+C and Y for Yes. Then

57
00:02:35,889 --> 00:02:38,810
you can exit. Any time you want to run the

58
00:02:38,810 --> 00:02:41,389
application and keep it running to watch

59
00:02:41,389 --> 00:02:43,770
the effect of your code changes, simply

60
00:02:43,770 --> 00:02:47,389
open the terminal and use npm start again.

61
00:02:47,389 --> 00:02:49,469
So now we know how to build and run our

62
00:02:49,469 --> 00:02:52,430
code. Yay! You may have noticed that I

63
00:02:52,430 --> 00:02:54,889
didn't save the file after I made the code

64
00:02:54,889 --> 00:02:58,080
change. When using VS Code, we can set it

65
00:02:58,080 --> 00:03:01,360
to automatically save our changes. Here,

66
00:03:01,360 --> 00:03:04,580
under File, Preferences, Settings,

67
00:03:04,580 --> 00:03:07,500
Workspace settings, I have it set to

68
00:03:07,500 --> 00:03:10,689
automatically save after a short delay.

69
00:03:10,689 --> 00:02:57,000
Before we go any further, let's take a moment and talk about modules.

