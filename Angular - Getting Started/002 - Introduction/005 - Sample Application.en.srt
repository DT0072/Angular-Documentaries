0
00:00:02,640 --> 00:00:04,269
To demonstrate the basic features of

1
00:00:04,269 --> 00:00:06,519
Angular, we'll build a sample application

2
00:00:06,519 --> 00:00:08,509
step by step as we journey through this

3
00:00:08,509 --> 00:00:10,699
course. Let's see the finished sample

4
00:00:10,699 --> 00:00:14,140
application in action. Welcome to Acme

5
00:00:14,140 --> 00:00:17,089
Product Management. As its name implies,

6
00:00:17,089 --> 00:00:19,469
this application manages our current list

7
00:00:19,469 --> 00:00:22,399
of products. Here at the top is our menu

8
00:00:22,399 --> 00:00:24,190
for access to the key features of the

9
00:00:24,190 --> 00:00:26,629
application. In a fullâ€‘featured

10
00:00:26,629 --> 00:00:28,280
application, there would, of course, be

11
00:00:28,280 --> 00:00:30,620
more options here, but we want to limit

12
00:00:30,620 --> 00:00:32,750
this sample application to the features we

13
00:00:32,750 --> 00:00:35,869
can build within this course. Clicking on

14
00:00:35,869 --> 00:00:37,750
the Product List option displays the

15
00:00:37,750 --> 00:00:40,850
Product List page. We see the page title

16
00:00:40,850 --> 00:00:42,429
and a table containing the list of

17
00:00:42,429 --> 00:00:45,000
products. If the user clicks the Show

18
00:00:45,000 --> 00:00:47,500
Image button, the product images appear,

19
00:00:47,500 --> 00:00:50,030
and the button changes to Hide Image.

20
00:00:50,030 --> 00:00:51,969
Click the button again to hide the images

21
00:00:51,969 --> 00:00:54,399
and compress the display. Notice the nice

22
00:00:54,399 --> 00:00:56,969
formatting of our price. And instead of a

23
00:00:56,969 --> 00:00:58,490
number for the rating, we display the

24
00:00:58,490 --> 00:01:01,407
rating in stars. Here at the top is an

25
00:01:01,407 --> 00:01:03,189
input box where the user can enter a

26
00:01:03,189 --> 00:01:06,069
filter string. When the input box contains

27
00:01:06,069 --> 00:01:08,530
a value, a Filtered by message appears,

28
00:01:08,530 --> 00:01:10,560
and the product list is filtered to only

29
00:01:10,560 --> 00:01:12,500
those with a product name that contained

30
00:01:12,500 --> 00:01:15,040
the entered string. Click on a product

31
00:01:15,040 --> 00:01:17,950
name to navigate to the product details.

32
00:01:17,950 --> 00:01:19,799
On the Product Detail page, we see the

33
00:01:19,799 --> 00:01:21,719
page title with the name of the product

34
00:01:21,719 --> 00:01:24,120
and all of the product details, including

35
00:01:24,120 --> 00:01:26,090
a product description, the nicely

36
00:01:26,090 --> 00:01:29,340
formatted price, and the star rating.

37
00:01:29,340 --> 00:01:31,409
Click the Back button to navigate back to

38
00:01:31,409 --> 00:01:34,390
the Product List page. So not a huge app,

39
00:01:34,390 --> 00:01:36,239
but big enough to demonstrate the basics

40
00:01:36,239 --> 00:01:38,409
of Angular. As with any Angular

41
00:01:38,409 --> 00:01:40,709
application, this application is comprised

42
00:01:40,709 --> 00:01:43,310
of a set of components, including a nested

43
00:01:43,310 --> 00:01:46,299
component for the rating stars. It has a

44
00:01:46,299 --> 00:01:48,140
service to get the data, and it

45
00:01:48,140 --> 00:01:50,280
incorporates routing to navigate between

46
00:01:50,280 --> 00:01:53,019
the pages. Now that we've seen the sample

47
00:01:53,019 --> 00:01:56,689
application, how do we build it? As stated

48
00:01:56,689 --> 00:01:58,840
earlier, an Angular application is

49
00:01:58,840 --> 00:02:01,159
comprised of a set of components and

50
00:02:01,159 --> 00:02:03,390
services that provide data and logic

51
00:02:03,390 --> 00:02:06,180
across those components. With that in

52
00:02:06,180 --> 00:02:08,139
mind, let's break the sample application

53
00:02:08,139 --> 00:02:10,629
into components and services. For the

54
00:02:10,629 --> 00:02:12,250
Welcome page, we'll build a welcome

55
00:02:12,250 --> 00:02:14,729
component. For the Product. List page,

56
00:02:14,729 --> 00:02:17,020
we'll build a product list component.

57
00:02:17,020 --> 00:02:19,060
Recall that we had a nice visual display

58
00:02:19,060 --> 00:02:21,889
of stars for our ratings. We want to reuse

59
00:02:21,889 --> 00:02:24,099
that feature, so we'll build a separate

60
00:02:24,099 --> 00:02:26,870
nestable star component. Clicking on a

61
00:02:26,870 --> 00:02:29,060
product in the Product List page displayed

62
00:02:29,060 --> 00:02:30,930
the product detail. We'll build a

63
00:02:30,930 --> 00:02:33,909
component for that as well and reuse the

64
00:02:33,909 --> 00:02:36,735
star component. Then we need a app

65
00:02:36,735 --> 00:02:39,000
component that ties our application pieces

66
00:02:39,000 --> 00:02:42,020
together. And our application gets data,

67
00:02:42,020 --> 00:02:44,750
so we'll want a product data service.

68
00:02:44,750 --> 00:02:48,439
Lastly, we need an index.html file. This

69
00:02:48,439 --> 00:02:50,169
is the file that is downloaded by the

70
00:02:50,169 --> 00:02:52,129
browser when a user accesses our

71
00:02:52,129 --> 00:02:54,729
application. We'll build the basics of

72
00:02:54,729 --> 00:02:56,800
each of these pieces and learn how to

73
00:02:56,800 --> 00:02:59,060
organize the components into Angular

74
00:02:59,060 --> 00:03:02,379
modules as we journey through this course.

75
00:03:02,379 --> 00:03:04,110
Now let's finish up this introductory

76
00:03:04,110 --> 00:02:58,000
module with a look at the outline for the remainder of this course.

