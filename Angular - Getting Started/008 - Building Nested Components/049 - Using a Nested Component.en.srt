0
00:00:02,240 --> 00:00:04,839
Now we are ready to nest our new component

1
00:00:04,839 --> 00:00:08,029
within another component. We do that by

2
00:00:08,029 --> 00:00:11,210
using our nested component as a directive

3
00:00:11,210 --> 00:00:13,460
and following the same steps we covered

4
00:00:13,460 --> 00:00:15,750
earlier in this course. Here is a

5
00:00:15,750 --> 00:00:17,980
shortened form of the code for a container

6
00:00:17,980 --> 00:00:20,829
component and its template. And here is

7
00:00:20,829 --> 00:00:23,780
the nested component we just created.

8
00:00:23,780 --> 00:00:25,789
Instead of displaying the starRating

9
00:00:25,789 --> 00:00:29,199
number, we want to display the stars. So

10
00:00:29,199 --> 00:00:31,350
the container component uses the nested

11
00:00:31,350 --> 00:00:34,289
component by specifying its directive

12
00:00:34,289 --> 00:00:37,450
here. This identifies where in the

13
00:00:37,450 --> 00:00:39,640
container to place the nested components

14
00:00:39,640 --> 00:00:42,480
template. As we've seen in prior demos,

15
00:00:42,480 --> 00:00:44,979
when we use the component as a directive,

16
00:00:44,979 --> 00:00:47,159
we need to tell Angular how to find that

17
00:00:47,159 --> 00:00:49,820
directive. We do that by declaring the

18
00:00:49,820 --> 00:00:53,070
nested component in an Angular module. How

19
00:00:53,070 --> 00:00:56,189
do we know which Angular module? Well, we

20
00:00:56,189 --> 00:00:58,479
still only have one Angular module,

21
00:00:58,479 --> 00:01:01,750
AppModule. In our example, the ProductList

22
00:01:01,750 --> 00:01:04,719
components template wants to use the

23
00:01:04,719 --> 00:01:06,620
StarComponent, so we add the declaration

24
00:01:06,620 --> 00:01:08,959
to the same Angular module that declares

25
00:01:08,959 --> 00:01:11,859
the ProductList component. We define the

26
00:01:11,859 --> 00:01:14,310
nested component in the declarations array

27
00:01:14,310 --> 00:01:18,069
of the NgModule decorator and, as always,

28
00:01:18,069 --> 00:01:20,480
define what we need by adding an import

29
00:01:20,480 --> 00:01:23,200
statement. Let's jump right back to our

30
00:01:23,200 --> 00:01:27,510
demo. Our star.component is now shown here

31
00:01:27,510 --> 00:01:29,769
on the right. We want to use our

32
00:01:29,769 --> 00:01:32,650
StarComponent in the ProductList template

33
00:01:32,650 --> 00:01:35,120
that is here on the left. In the table

34
00:01:35,120 --> 00:01:37,379
data element, we want to replace the

35
00:01:37,379 --> 00:01:39,939
display of the starRating number with our

36
00:01:39,939 --> 00:01:43,030
StarComponent. To do that, we simply

37
00:01:43,030 --> 00:01:46,879
replace the binding with our directive.

38
00:01:46,879 --> 00:01:48,730
Now our ProductList template will display

39
00:01:48,730 --> 00:01:52,099
our stars here. Next, we need to tell

40
00:01:52,099 --> 00:01:54,939
Angular where to find this directive.

41
00:01:54,939 --> 00:01:57,709
Since we only have one Angular module,

42
00:01:57,709 --> 00:01:59,700
we'll add the declaration for the nested

43
00:01:59,700 --> 00:02:02,424
component there. Add the StarComponent to

44
00:02:02,424 --> 00:02:04,555
the declarations array passed into the

45
00:02:04,555 --> 00:02:07,724
NgModule decorator. These are the same

46
00:02:07,724 --> 00:02:09,914
steps we followed earlier in this course

47
00:02:09,914 --> 00:02:13,094
to use a component as a directive. Nothing

48
00:02:13,094 --> 00:02:17,094
new here so far. Let's see what we did. We

49
00:02:17,094 --> 00:02:21,724
have stars, yes, hmm, but we see five of

50
00:02:21,724 --> 00:02:26,064
them. Let's clear out the filter. Yes, we

51
00:02:26,064 --> 00:02:30,544
see five every time. Hover over the stars,

52
00:02:30,544 --> 00:02:33,085
and we see our hard coded starRating is

53
00:02:33,085 --> 00:02:37,074
four. It seems that our starWidth is not

54
00:02:37,074 --> 00:02:40,094
being set. Let's look at the code again.

55
00:02:40,094 --> 00:02:42,264
We set the starWidth property in the

56
00:02:42,264 --> 00:02:45,430
ngOnChanges method when the OnChanges life

57
00:02:45,430 --> 00:02:48,513
cycle event occurs, but the OnChanges life

58
00:02:48,513 --> 00:02:51,824
cycle event never occurs because OnChanges

59
00:02:51,824 --> 00:02:54,254
only watches for changes to input

60
00:02:54,254 --> 00:02:56,794
properties. We don't have any input

61
00:02:56,794 --> 00:03:00,194
properties, so we have two problems here.

62
00:03:00,194 --> 00:03:03,194
Our OnChanges event does not fire, and we

63
00:03:03,194 --> 00:03:04,875
don't currently have a way to get the

64
00:03:04,875 --> 00:03:07,694
correct rating number from the container.

65
00:03:07,694 --> 00:03:14,000
Let's see how input properties can solve both of these issues.

